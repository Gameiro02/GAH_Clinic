openapi: '3.0.2'
info:
  title: GAH_Clinic API
  version: '1.0'
servers:
  - url: http://localhost:8000/
paths:
  /admin/:
    get:
      summary: Goes to the admin dashboard
      description: This endpoints allows you to go to the django admin dashboard.
      responses:
        '200':
          description: OK
  /login/:
    post:
      summary: Obtain JWT token
      description: This endpoint allows users to obtain a JWT token by providing valid credentials.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the user.
                  example: userTeste
                password:
                  type: string
                  description: The password of the user.
                  example: lol123
              required:
                - username
                - password
      responses:
        '200':
          description: JWT token obtained successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  refresh:
                    type: string
                    description: The refresh token (JWT) used to obtain new access tokens.
                  access:
                    type: string
                    description: The access token (JWT) used for authentication.
                  user:
                    type: string
                    description: The username of the user
        '400':
          description: Bad request, invalid input 
        '401':
          description: Unauthorized, incorrect username or password
  /book-appointment/:
    post:
      summary: Book an appointment
      description: This endpoint allows a user to book an appointment with a doctor based on a specialty, doctor, date.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                specialty:
                  type: string
                  description: The specialty of the doctor required for the appointment.
                  example: "Dermatology"
                doctorId:
                  type: integer
                  description: The identifier for the doctor with whom the appointment is to be booked.
                  example: 1
                date:
                  type: string
                  format: date
                  description: The date when the appointment is scheduled.
                  example: "2024-04-20"
                time:
                  type: string
                  format: time
                  description: The time when the appointment starts, must be on the hour (e.g., 14:00).
                  example: "15:00:00"
      responses:
        '201':
          description: Appointment booked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  appointment_id:
                    type: integer
                    description: The unique identifier of the booked appointment.
                    example: 1234
                  message:
                    type: string
                    description: A message confirming the successful booking of the appointment.
                    example: "Appointment booked successfully."
        '400':
          description: Bad request, invalid input data
        '401':
          description: Unauthorized, token missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: "No record found for the specified doctorId. Please check the doctorId and try again."
                    example: "Doctor does not exist."
        '409':
          description: Conflict, an appointment already exists at this date and time
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating a conflict with an existing appointment.
                    example: "An appointment already exists at this date and time."
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
  /user/appointments/:
    get:
      summary: Retrieve all appointments for the autenticated user
      description: This endpoint retrieves all appointments associated with the authenticated user. It requires JWT authentication.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successfully retrieved all appointments for the user.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    appointment_id:
                      type: integer
                      description: The unique identifier of the appointment
                      example: 1234
                    date:
                      type: string
                      format: date
                      description: The date of the appointment
                      example: "2024-04-20"
                    time:
                      type: string
                      format: time
                      description: The time of the appointment.
                      example: "15:00:00"
                    specialty:
                      type: string
                      description: The medical specialty of the appointment.
                      example: "Dermatology"
                    doctorId:
                      type: integer
                      description: The identifier of the doctor
                      example: 1
                    status:
                      type: string
                      description: The current status of the appointment.
                      example: "scheduled"
                      enum:
                        - waiting for payment
                        - scheduled
                        - finished
                    doctorName:
                      type: string
                      description: The name of the doctor
                      example: "Maria Filho"
        '401':
          description: Unauthorized, token missing or invalid
        '500':
          description: Internal Server Error
  /payment/:
    post:
      summary: Process payment for a booked appointment
      description: This endpoint processess payments for appointments and must be completed within 30 minutes of booking.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appointment_id:
                  type: string
                  description: The identifier of the booked appointment.
                  example: uniqueId1
      responses:
        '200':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: The status of the payment process.
                    example: "Success"
                  message:
                    type: string
                    description: A message detailing the result of the payment operation.
                    example: "Payment has been processed successfully."
        '400':
          description: Invalid payment details provided
        '401':
          description: Unauthorized, token missing or invalid
        '500':
          description: Internal Server Error
  /appointments/{appointment_id}/status:
    get:
      summary: Retrieve the status of an appointment
      description: This endpoint allows a user to retrieve the current status of a specific appointment by providing the appointment's unique identifier.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: appointment_id
          required: true
          schema:
            type: string
          description: The unique identifier of the appointment for which to retrieve the status.
      responses:
        '200':
          description: successfully retrieved the status of the appointment.
          content:
            application/json:
              schema:
                type: object
                properties:
                  appointment_id:
                    type: string
                    description: The unique identifier of the appointment.
                    example: "abc123"
                  status:
                    type: string
                    description: The current status of the appointment.
                    example: "waiting for payment"
                    enum:
                      - waiting for payment
                      - scheduled
                      - finished
        '400':
          description: Bad request, invalid appointment ID
        '401':
          description: Unauthorized, token missing or invalid
        '404':
          description: Not found, appointment not found
        '500':
          description: Internal Server Error
                    
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT